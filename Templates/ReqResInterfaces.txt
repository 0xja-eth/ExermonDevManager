$[language=python]
$[gen_path=game_module/routing.py]
from django.conf.urls import re_path

$<modules:
from ${pyCode}.views import Service as ${code}
>

from .consumer import ChannelLayerTag, GameConsumer

websocket_urlpatterns = [
	re_path('game/', GameConsumer),
]

DISCONNECT_ROUTE = 'player/player/disconnect'

WEBSOCKET_METHOD_ROUTER = {
	$<interfaces:
	$|description?# ${description}$name?# ${name}$:# 未知接口|
	'${route}': [[$<reqParams:
		['${name}', '${typeCode}']>$(,)
	],
		${bFuncText},  # 处理函数
		ChannelLayerTag.${bTagName}  # 是否需要响应
	]>$(,)
}
${modules:
$[gen_path=${pyCode}/routing.py]
from .models import *

# =======================
# ${name}服务类，封装管理${name}模块的业务处理函数
# =======================
class Service:
	${reqResInterfaces:
	@classmethod
	async def ${bFunc}(cls, consumer, $<params: 
				    $|isUid?player: Player$:${name}: '${typeCode}'|
				    >$(, ):
		pass
	}


# =======================
# ${name}校验类，封装${name}业务数据格式校验的函数
# =======================
class Check:
	pass


# =======================
# ${name}公用类，封装关于${name}模块的公用函数
# =======================
class Common:
	pass

}